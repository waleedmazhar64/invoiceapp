{"version":3,"sources":["./src/app/pages/vendors/add/add.page.html","./src/app/pages/vendors/add/add.module.ts","./src/app/pages/vendors/add/add.page.scss","./src/app/pages/vendors/add/add.page.ts"],"names":[],"mappings":"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","file":"pages-vendors-add-add-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-icon padding  name=\\\"close\\\" (click)=\\\"close()\\\"></ion-icon>\\n    </ion-buttons>\\n    <ion-title>Add Vendor</ion-title>\\n    <ion-label padding slot=\\\"end\\\" (click)=\\\"save()\\\">Save</ion-label>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <!-- <ion-item>\\n    <ion-icon slot=\\\"start\\\" name=\\\"person\\\"></ion-icon>\\n    <ion-input placeholder=\\\"Vendor Name\\\"  type=\\\"text\\\" style=\\\"border: none;text-align: left;\\\" [(ngModel)]=\\\"vendor.Name\\\"></ion-input>\\n  </ion-item>\\n  <ion-item>\\n    <ion-icon slot=\\\"start\\\" name=\\\"pin\\\"></ion-icon>\\n    <ion-input placeholder=\\\"Address\\\" type=\\\"text\\\" style=\\\"border: none;text-align: left;\\\" [(ngModel)]=\\\"vendor.Address\\\"></ion-input>\\n </ion-item>\\n  <ion-item>\\n    <ion-icon slot=\\\"start\\\" name=\\\"call\\\"></ion-icon>\\n    <ion-input placeholder=\\\"Phone\\\" type=\\\"tel\\\" style=\\\"border: none;text-align: left;\\\" [(ngModel)]=\\\"vendor.Phone\\\"></ion-input>\\n </ion-item>\\n   <ion-item>\\n     <ion-icon slot=\\\"start\\\" name=\\\"mail\\\"></ion-icon>\\n     <ion-input placeholder=\\\"Email\\\"  type=\\\"text\\\" style=\\\"border: none;text-align: left;\\\" [(ngModel)]=\\\"vendor.Email\\\"></ion-input>\\n   </ion-item> -->\\n   <form [formGroup]=\\\"loginform\\\">\\n      <ion-grid>\\n          <ion-row justify-content-center>\\n            <ion-col class=\\\"col-md-6\\\">\\n                <ion-item>\\n                    <ion-icon slot=\\\"start\\\" name=\\\"person\\\"></ion-icon>\\n\\n                    <ion-input type=\\\"text\\\" placeholder=\\\"Vendor Name\\\"  formControlName=\\\"Name\\\" [(ngModel)]=\\\"vendor.Name\\\"></ion-input>\\n                </ion-item>\\n                <ng-container *ngFor=\\\"let error of errormessages.Name\\\">\\n                  <div  style=\\\"color: red;\\\" *ngIf=\\\"loginform.get('Name').hasError(error.type) && (loginform.get('Name').dirty || loginform.get('Name').touched)\\\">\\n                    *{{ error.message }}\\n                  </div>\\n                </ng-container>\\n            </ion-col>\\n          </ion-row>\\n          <ion-row justify-content-center>\\n               <ion-col class=\\\"col-md-6\\\">\\n                   <ion-item>\\n                      <ion-icon slot=\\\"start\\\" name=\\\"pin\\\"></ion-icon>\\n                      <ion-input type=\\\"text\\\" placeholder=\\\"Address\\\"  formControlName=\\\"Address\\\" [(ngModel)]=\\\"vendor.Address\\\"></ion-input>\\n                   </ion-item>\\n                   <ng-container *ngFor=\\\"let error of errormessages.Address\\\">\\n                     <div style=\\\"color: red;\\\" *ngIf=\\\"loginform.get('Address').hasError(error.type) && (loginform.get('Address').dirty || loginform.get('Address').touched)\\\">\\n                       *{{ error.message }}\\n                     </div>\\n                   </ng-container>\\n               </ion-col>\\n             </ion-row>\\n             <ion-row justify-content-center>\\n                  <ion-col class=\\\"col-md-6\\\">\\n                      <ion-item>\\n                          <ion-icon slot=\\\"start\\\" name=\\\"call\\\"></ion-icon>\\n                          <ion-input type=\\\"tel\\\" placeholder=\\\"Phone\\\" formControlName=\\\"Phone\\\" [(ngModel)]=\\\"vendor.Phone\\\"></ion-input>\\n                      </ion-item>\\n                      <ng-container *ngFor=\\\"let error of errormessages.Phone\\\">\\n                        <div style=\\\"color: red;\\\" *ngIf=\\\"loginform.get('Phone').hasError(error.type) && (loginform.get('Phone').dirty || loginform.get('Phone').touched)\\\">\\n                          *{{ error.message }}\\n                        </div>\\n                      </ng-container>\\n                  </ion-col>\\n                </ion-row>\\n              \\n      </ion-grid>\\n      </form>\\n      <ion-row justify-content-center>\\n          <ion-col class=\\\"col-md-6\\\">\\n              <ion-item>\\n                 <ion-icon slot=\\\"start\\\" name=\\\"mail\\\"></ion-icon>\\n                  <ion-input type=\\\"text\\\" placeholder=\\\"Email\\\" [(ngModel)]=\\\"vendor.Email\\\"></ion-input>\\n              </ion-item>\\n          </ion-col>\\n        </ion-row>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\nimport { Network } from '@ionic-native/network/ngx';\nimport { HTTP } from '@ionic-native/http/ngx';\nimport { Contacts, Contact, ContactField, ContactName } from '@ionic-native/contacts';\n\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddPage } from './add.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  providers: [\n    DatePipe,\n    Network,\n    HTTP,\n    Contacts\n  ],\n  declarations: [AddPage]\n})\nexport class AddPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3ZlbmRvcnMvYWRkL2FkZC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { AlertController, Platform, LoadingController } from '@ionic/angular';\nimport { Contacts, Contact, ContactField, ContactName } from '@ionic-native/contacts';\nimport { HTTP } from '@ionic-native/http/ngx';\nimport { HttpClient } from '@angular/common/http';\nimport { finalize } from 'rxjs/operators';\nimport { from } from 'rxjs';\nimport { DatabaseService} from 'src/app/services/database.service';\nimport { SyncService } from 'src/app/services/sync.service';\nimport { Network } from '@ionic-native/network/ngx';\nimport { Storage } from '@ionic/storage';\nimport { DatePipe } from '@angular/common';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\n\n\n\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.page.html',\n  styleUrls: ['./add.page.scss'],\n})\nexport class AddPage implements OnInit {\n  tblName:any=\"vendors\";\n  tblId:any;\n  usdId:any;\n  acttype:any=\"added\";\n  lgdate:any=\"2019-11-21\";\n  getId:any=[];\n  name:any\n  vendor = {\n    Name: '',\n    Address: '',\n    Phone: '',\n    Email: ''\n  }\n  loginform: FormGroup;\n\n  errormessages = {\n    Name : [\n      { type: 'requird', message: 'First Name is required'},\n      { type: 'pattern', message: 'Enter valid is required'}\n\n\n    ],\n    Address : [\n      { type: 'requird', message: 'Email is required'},\n      { type: 'pattern', message: 'Enter valid is required'}\n\n    ],\n    Phone : [\n      { type: 'requird', message: 'Email is required'},\n      { type: 'pattern', message: 'Enter valid phone number'},\n      { type: 'minlength', message: 'Enter valid phone number'},\n      { type: 'maxlength', message: 'Enter valid phone number'}\n\n    ],\n  }\n  constructor(\n    private router: Router,\n    private location: Location,\n    private alertCtrl: AlertController,\n    private contacts: Contacts,\n    private plt: Platform,\n    private http: HttpClient,\n    private nativeHttp: HTTP,\n    private loadingCtrl: LoadingController,\n    private databaseservice: DatabaseService,\n    private databaseprovider: DatabaseService,\n    private syncService: SyncService,\n    private network: Network,\n    private storage:Storage,\n    private datePipe: DatePipe,\n    public formbuilder: FormBuilder,\n\n\n\n  ) { \n    this.storage.get('userId').then((val)=>{\n      this.usdId = val;\n      console.log(this.usdId);\n    });\n    this.getformattedDate();\n    this.loginform = this.formbuilder.group({\n\n      Name: new FormControl('', Validators.compose([\n          Validators.required,\n      ])),\n      Address: new FormControl('', Validators.compose([\n        Validators.required,\n        //Validators.minLength(6),\n      ])),\n      Phone: new FormControl('', Validators.compose([\n        Validators.required,\n        //Validators.minLength(6),\n        Validators.minLength(11),\n        Validators.maxLength(11)\n      ])),\n    });\n  }\n  getformattedDate()\n  {\n     var dateObj=new Date();\n\n     var year= dateObj.getFullYear().toString();\n     var month= dateObj.getMonth().toString();\n     var date= dateObj.getDate().toString();\n     var monthArray=['01','02','03','04','05','06','07','08','09','10','11','12'];\n     var hour=dateObj.getHours();\n     var min=dateObj.getMinutes();\n     var sec=dateObj.getSeconds();\n     this.lgdate=date+'/'+monthArray[month]+'/'+year+'  '+hour+':'+min+':'+sec;\n     console.log(this.lgdate);\n\n  }\n  ngOnInit() {\n  }\n  close() {\n    this.location.back();\n  }\n  save() {\n    if((this.vendor.Name.length>0 && this.vendor.Address.length>0)) {\n      //this.getDataNativeHttp();\n      // this.addVendor();\n      if (this.loginform.valid === true) {\n        this.addVendor();\n        //this.getCid();\n      } else {\n        alert('Kindly enter correct information in fields');\n      }\n    } else {\n      this.alertCtrl.create({\n            header: 'Warning',\n            message: 'Kindly fill Vendor Name and Address Field(s)',\n            buttons: [\n                      {\n                        text: 'OK',\n                        role: 'cancel',\n                        handler: () => {\n                          console.log('Cancel clicked');\n                        }\n                      }\n                    ]\n      }).then(alert => alert.present());\n    }\n  }\n  async getDataNativeHttp() {\n \n    debugger;\n     let loading = await this.loadingCtrl.create();\n     await loading.present();\n     const url = this.databaseprovider.getURL();\n\n    this.nativeHttp.setDataSerializer(\"json\");\n     let nativeCall = this.nativeHttp.post( url + '/createVendor.php',\n      this.vendor\n     ,{\n       'Content-Type':'application/json',\n       'x-api-key': '28b32377-cd77-44b3-8cbb-a9dc69bfddf4'\n     });\n  \n    from(nativeCall).pipe(\n       finalize(() => loading.dismiss)\n     )\n     .subscribe(data => {\n       loading.dismiss();\n       console.log('Native data:',data);\n       this.databaseservice.setupdatevendors(1);\n       this.router.navigate(['/menu/vendors']);\n      // this.initializeItems();\n     },err =>{\n       loading.dismiss();\n       this.databaseservice.setupdatevendors(1);\n       this.router.navigate(['/menu/vendors']);\n       console.log('JS call error',err);\n       const error = JSON.parse(err.error);\n       alert(error.message);\n       console.log('Native data:',JSON.parse(error));\n     });\n  \n  }\n  AddLog(){\n    if (this.usdId === 1) {\n      this.acttype = 'You added a new vendor';\n    } else {\n      this.acttype = 'You added a new vendor';\n    }\n    this.name \n    debugger\n    let now = new Date().toString();\n    const a = this.datePipe.transform(now, 'dd MMM yyyy h:mm a');\n    this.lgdate = 'at ' + a;\n    this.tblName,this.tblId,this.usdId,this.acttype,this.name,this.lgdate\n    this.syncService.addLogs(this.tblName,this.tblId,this.usdId,this.acttype,this.name,this.lgdate).then(data => {\n          console.log(\"Log has been added\");\n          this.syncService.syncAddedLog();\n          this.GetLogs();\n          \n    });\n  }\n  GetLogs(){\n    this.syncService.getAllLogs().then(data=>{\n      console.log(data);\n    });\n  }\n  getCid(){\n    this.syncService.getVendorssonspot().then(data=>{\n      this.getId=data;\n      console.log(this.getId);\n      this.tblId=this.getId[0].ID;\n      this.name = this.getId[0].Name\n      debugger;\n      console.log(this.tblId);\n      this.AddLog();\n    });\n  }\n  addVendor() {\n    // tslint:disable-next-line: max-line-length\n    this.syncService.addvendor(this.vendor.Name, this.vendor.Address, this.vendor.Phone, this.vendor.Email)\n    .then(data => {\n      data\n      this.getCid();\n      this.databaseservice.setupdatevendors(1);\n      this.router.navigate(['/menu/vendors']);\n      if (this.network.type === 'none') {\n       \n      }else {\n      this.syncService.syncAddedVendors().then((data) => {\n        if (data.length > 0) {\n          const IDs = [];\n          for (let i = 0; i < data.length; i++) {\n             IDs[i] = data[i].ID;\n          }\n          const url = this.databaseprovider.getURL();\n        \n          debugger;\n         this.nativeHttp.setDataSerializer(\"json\");\n         \n          let nativeCall = this.nativeHttp.post(url , \n            {\n              'Name': 'syncAddedVendors',\n              \"Vendors\": data\n            } , \n            {\n              'Content-Type': 'application/json',\n              'x-api-key': '28b32377-cd77-44b3-8cbb-a9dc69bfddf4'\n            });\n       \n          from(nativeCall).pipe(\n            finalize(() =>{} )\n          )\n          .subscribe(data => {\n            console.log('Native data:',data);\n            const g = JSON.parse(data.data);\n            if(g.success === 1) {\n             // alert('success');\n             console.log('start');\n              this.syncService.updateSyncedVendors(IDs).then((data) => {\n              });\n            } else {\n              // alert('failed');\n            }\n\n           // this.initializeItems();\n          },err =>{\n            console.log('JS call error',err);\n            const error = JSON.parse(err.error);\n            // alert(error.message);\n            console.log('Native data:',JSON.parse(error));\n          });\n\n          debugger\n        }\n       \n      });\n    }\n\n    });\n  }\n\n}\n"],"sourceRoot":""}