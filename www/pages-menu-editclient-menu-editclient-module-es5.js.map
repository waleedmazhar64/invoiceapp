{"version":3,"sources":["./src/app/pages/menu-editclient/menu-editclient.page.html","./src/app/pages/menu-editclient/menu-editclient.module.ts","./src/app/pages/menu-editclient/menu-editclient.page.scss","./src/app/pages/menu-editclient/menu-editclient.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,kbAAkb,6PAA6P,iBAAiB,gOAAgO,iBAAiB,2NAA2N,iBAAiB,oOAAoO,iBAAiB,uOAAuO,iBAAiB,8NAA8N,iBAAiB,6nBAA6nB,yJAAyJ,iBAAiB,goBAAgoB,4JAA4J,iBAAiB,0pBAA0pB,4JAA4J,iBAAiB,0tBAA0tB,2KAA2K,iBAAiB,suBAAsuB,kKAAkK,iBAAiB,qwBAAqwB,qKAAqK,iBAAiB,kYAAkY,iBAAiB,+MAA+M,iBAAiB,+IAA+I,iQAAiQ,iBAAiB,mNAAmN,8OAA8O,iBAAiB,kRAAkR,iBAAiB,iQAAiQ,iBAAiB,gQAAgQ,iBAAiB,oQAAoQ,iBAAiB,mLAAmL,sSAAsS,iBAAiB,iQAAiQ,iBAAiB,oPAAoP,iBAAiB,2OAA2O,iBAAiB,2KAA2K,gQAAgQ,aAAa,+IAA+I,wRAAwR,iBAAiB,8MAA8M,mE;;;;;;;;;;;;;;;;;;;;;;;;;ACAj1X;AACM;AACF;AACU;AACF;AACV;AACS;AACP;AACyC;AAEzC;AAEe;AAE5D,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wEAAkB;KAC9B;CACF,CAAC;AAkBF;IAAA;IAAuC,CAAC;IAA3B,wBAAwB;QAhBpC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,kEAAmB;gBACnB,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,SAAS,EAAE;gBACT,wDAAQ;gBACR,iEAAO;gBACP,2DAAI;gBACJ,+DAAQ;aACT;YACD,YAAY,EAAE,CAAC,wEAAkB,CAAC;SACnC,CAAC;OACW,wBAAwB,CAAG;IAAD,+BAAC;CAAA;AAAH;;;;;;;;;;;;ACrCrC,+DAA+D,uK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACS;AAChB;AACmC;AACQ;AACzC;AACK;AACP;AACf;AACuC;AACP;AACR;AACX;AAEE;AACsC;AASjF;IAkEE,4BACU,MAAc,EACd,QAAkB,EAClB,SAA0B,EAC1B,QAAkB,EAClB,GAAa,EACb,IAAgB,EAChB,UAAgB,EAChB,WAA8B,EAC9B,eAAgC,EAChC,WAAwB,EACxB,OAAgB,EAChB,OAAe,EACf,QAAkB,EACnB,WAAwB;QAdjC,iBA+DE;QA9DQ,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAU;QAClB,cAAS,GAAT,SAAS,CAAiB;QAC1B,aAAQ,GAAR,QAAQ,CAAU;QAClB,QAAG,GAAH,GAAG,CAAU;QACb,SAAI,GAAJ,IAAI,CAAY;QAChB,eAAU,GAAV,UAAU,CAAM;QAChB,gBAAW,GAAX,WAAW,CAAmB;QAC9B,oBAAe,GAAf,eAAe,CAAiB;QAChC,gBAAW,GAAX,WAAW,CAAa;QACxB,YAAO,GAAP,OAAO,CAAS;QAChB,YAAO,GAAP,OAAO,CAAQ;QACf,aAAQ,GAAR,QAAQ,CAAU;QACnB,gBAAW,GAAX,WAAW,CAAa;QA/EjC,OAAE,GAAG,EAAE,CAAC;QACR,SAAI,GAAG,EAAE,CAAC;QACV,aAAQ,GAAG,EAAE,CAAC;QACd,YAAO,GAAK,SAAS,CAAC;QAGtB,YAAO,GAAK,QAAQ,CAAC;QAErB,WAAM,GAAK,YAAY,CAAC;QACxB,WAAM,GAAG;YACP,GAAG,EAAE,EAAE;YACP,SAAS,EAAE,EAAE;YACb,KAAK,EAAE,EAAE;YACT,KAAK,EAAC,EAAE;YACR,IAAI,EAAE,EAAE;YACR,cAAc,EAAE,EAAE;YAClB,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,EAAE;YACR,MAAM,EAAE,EAAE;YACV,OAAO,EAAE,CAAC;YACV,IAAI,EAAE,CAAC;SACR,CAAC;QACF,SAAI,GAAG,IAAI,CAAC;QACZ,UAAK,GAAG,EAAE,CAAC;QACX,gBAAW,GAAG,EAAE,CAAC;QACjB,SAAI,GAAG,EAAE,CAAC;QACV,UAAK,GAAG,EAAE,CAAC;QAEX,SAAI,GAAG,EAAE,CAAC;QACV,kBAAa,GAAG;YACd,KAAK,EAAG;gBACN,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,wBAAwB,EAAC;gBACrD,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,yBAAyB,EAAC;aAGvD;YACD,IAAI,EAAG;gBACL,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,mBAAmB,EAAC;gBAChD,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,yBAAyB,EAAC;aAEvD;YACD,QAAQ,EAAG;gBACT,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,mBAAmB,EAAC;gBAChD,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,yBAAyB,EAAC;aAEvD;YACD,IAAI,EAAG;gBACL,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,mBAAmB,EAAC;gBAChD,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,yBAAyB,EAAC;aAEvD;YACD,IAAI,EAAG;gBACL,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,mBAAmB,EAAC;gBAChD,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,0BAA0B,EAAC;gBACvD,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,0BAA0B,EAAC;gBACzD,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,0BAA0B,EAAC;aAG1D;YACD,KAAK,EAAG;gBACN,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,sBAAsB,EAAC;gBACnD,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,4BAA4B,EAAC;aAC5D;SACF,CAAC;QAoBA,IAAI,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE;YACnD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC;YACzE,2EAA2E;YAC3E,uFAAuF;YACvF,yFAAyF;YACzF,QAAQ,CAAC;YACT,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;gBAClC,KAAI,CAAC,KAAK,GAAC,GAAG,CAAC;gBACf,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC;YAC1B,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBAEtC,KAAK,EAAE,IAAI,2DAAW,CAAC,EAAE,EAAE,0DAAU,CAAC,OAAO,CAAC;oBAC1C,0DAAU,CAAC,QAAQ;iBACtB,CAAC,CAAC;gBACH,KAAK,EAAE,IAAI,2DAAW,CAAC,EAAE,EAAE,0DAAU,CAAC,OAAO,CAAC;oBAC5C,0DAAU,CAAC,QAAQ;iBAEpB,CAAC,CAAC;gBACH,QAAQ,EAAE,IAAI,2DAAW,CAAC,EAAE,EAAE,0DAAU,CAAC,OAAO,CAAC;oBAC/C,0DAAU,CAAC,QAAQ;iBAEpB,CAAC,CAAC;gBACH,IAAI,EAAE,IAAI,2DAAW,CAAC,EAAE,EAAE,0DAAU,CAAC,OAAO,CAAC;oBAC3C,0DAAU,CAAC,QAAQ;iBAEpB,CAAC,CAAC;gBACH,IAAI,EAAE,IAAI,2DAAW,CAAC,EAAE,EAAE,0DAAU,CAAC,OAAO,CAAC;oBAC3C,0DAAU,CAAC,QAAQ;oBACpB,8EAA8E;oBAC7E,0DAAU,CAAC,SAAS,CAAC,EAAE,CAAC;oBACxB,0DAAU,CAAC,SAAS,CAAC,EAAE,CAAC;iBACzB,CAAC,CAAC;gBACH,IAAI,EAAE,IAAI,2DAAW,CAAC,EAAE,EAAE,0DAAU,CAAC,OAAO,CAAC;oBAC3C,0DAAU,CAAC,QAAQ;iBAKpB,CAAC,CAAC;aAEJ,CAAC,CAAC;SAEJ;IACF,CAAC;IACD,6CAAgB,GAAhB;QAEG,IAAI,OAAO,GAAC,IAAI,IAAI,EAAE,CAAC;QAEvB,IAAI,IAAI,GAAE,OAAO,CAAC,WAAW,EAAE,CAAC,QAAQ,EAAE,CAAC;QAC3C,IAAI,KAAK,GAAE,OAAO,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC;QACzC,IAAI,IAAI,GAAE,OAAO,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC;QACvC,IAAI,UAAU,GAAC,CAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC,CAAC;QAC7E,IAAI,IAAI,GAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QAC5B,IAAI,GAAG,GAAC,OAAO,CAAC,UAAU,EAAE,CAAC;QAC7B,IAAI,GAAG,GAAC,OAAO,CAAC,UAAU,EAAE,CAAC;QAC7B,IAAI,CAAC,MAAM,GAAC,IAAI,GAAC,GAAG,GAAC,UAAU,CAAC,KAAK,CAAC,GAAC,GAAG,GAAC,IAAI,GAAC,IAAI,GAAC,IAAI,GAAC,GAAG,GAAC,GAAG,GAAC,GAAG,GAAC,GAAG,CAAC;QAC1E,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAE5B,CAAC;IACF,qCAAQ,GAAR;IACA,CAAC;IACD,kCAAK,GAAL;QAEE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IACD,iCAAI,GAAJ;QAEE,IAAG,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAC,CAAC,IAAG,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,MAAM,GAAC,CAAC,IAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAC,CAAC,IAAG,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,EAAE,CAAE,EAAE;YACvL,4BAA4B;YAC7B,uBAAuB;YACtB,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,KAAK,IAAI,EAAE;gBAClC,IAAI,CAAC,YAAY,EAAE,CAAC;gBACrB,iBAAiB;aACjB;iBAAM;gBACL,KAAK,CAAC,4CAA4C,CAAC,CAAC;aACrD;SACA;aAAM;YACL,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBAChB,MAAM,EAAE,SAAS;gBACjB,OAAO,EAAE,wBAAwB;gBACjC,OAAO,EAAE;oBACC;wBACE,IAAI,EAAE,IAAI;wBACV,IAAI,EAAE,QAAQ;wBACd,OAAO,EAAE;4BACP,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;wBAChC,CAAC;qBACF;iBACF;aACd,CAAC,CAAC,IAAI,CAAC,eAAK,IAAI,YAAK,CAAC,OAAO,EAAE,EAAf,CAAe,CAAC,CAAC;SACnC;IACH,CAAC;IACK,8CAAiB,GAAvB;;;;;;;wBAEE,uCAAuC;wBACvC,mCAAmC;wBACnC,yBAAyB;wBACzB,uDAAuD;wBACvD,wCAAwC;wBACxC,QAAQ,CAAC;wBACM,qBAAM,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;;wBAAzC,OAAO,GAAG,SAA+B;wBAC7C,qBAAM,OAAO,CAAC,OAAO,EAAE;;wBAAvB,SAAuB,CAAC;wBAClB,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC;wBAE3C,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;wBACtC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,GAAG,mBAAmB,EAC7D,IAAI,CAAC,MAAM,EACX;4BACC,cAAc,EAAC,kBAAkB;4BACjC,WAAW,EAAE,sCAAsC;yBACpD,CAAC,CAAC;wBAEJ,iDAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAClB,+DAAQ,CAAC,cAAM,cAAO,CAAC,OAAO,EAAf,CAAe,CAAC,CAChC;6BACA,SAAS,CAAC,cAAI;4BACb,OAAO,CAAC,OAAO,EAAE,CAAC;4BAClB,OAAO,CAAC,GAAG,CAAC,cAAc,EAAC,IAAI,CAAC,CAAC;4BACjC,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;4BAClC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;4BAE1B,KAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;4BACzC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;4BAGzC,0BAA0B;wBAC3B,CAAC,EAAC,aAAG;4BACH,OAAO,CAAC,OAAO,EAAE,CAAC;4BAClB,OAAO,CAAC,GAAG,CAAC,eAAe,EAAC,GAAG,CAAC,CAAC;4BACjC,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;4BACpC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;4BACrB,OAAO,CAAC,GAAG,CAAC,cAAc,EAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;wBAChD,CAAC,CAAC,CAAC;;;;;KAEL;IACD,mCAAM,GAAN;QAAA,iBAmBC;QAlBC,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;YACpB,IAAI,CAAC,OAAO,GAAG,oBAAoB,CAAC;SACrC;aAAM;YACL,IAAI,CAAC,OAAO,GAAG,mBAAmB,CAAC;SACpC;QACD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;QACxD,IAAI,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC,QAAQ,EAAE,CAAC;QAChC,IAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,EAAE,oBAAoB,CAAC,CAAC;QAC7D,IAAI,CAAC,MAAM,GAAG,KAAK,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,OAAO,EAAC,IAAI,CAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,IAAI,CAAC,OAAO,EAAC,IAAI,CAAC,MAAM;QAC3D,QAAQ;QACR,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAC,IAAI,CAAC,KAAK,EAAC,IAAI,CAAC,KAAK,EAAC,IAAI,CAAC,OAAO,EAAC,IAAI,CAAC,IAAI,EAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,cAAI;YAEnG,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;YAClC,KAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;YAChC,KAAI,CAAC,OAAO,EAAE,CAAC;QAErB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,oCAAO,GAAP;QACE,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,cAAI;YACrC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,yCAAY,GAAZ;QAAA,iBA8BC;QA7BC,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,EAAE;YAC1B,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC;SACzB;QACE,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3B,IAAI,CAAC,MAAM,CAAC,KAAK,EACjB,IAAI,CAAC,MAAM,CAAC,KAAK,EACjB,IAAI,CAAC,MAAM,CAAC,IAAI,EAChB,IAAI,CAAC,MAAM,CAAC,cAAc,EAC1B,IAAI,CAAC,MAAM,CAAC,IAAI,EAChB,IAAI,CAAC,MAAM,CAAC,IAAI,EAChB,IAAI,CAAC,MAAM,CAAC,GAAG,EACf,IAAI,CAAC,MAAM,CAAC,OAAO,EACnB,IAAI,CAAC,MAAM,CAAC,IAAI,CACf;aACF,IAAI,CAAC,cAAI;YACR,IAAI;YACJ,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAC7B,KAAI,CAAC,KAAK,GAAC,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC;YAC3B,KAAI,CAAC,MAAM,EAAE,CAAC;YACd,KAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;YACzC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;YACxC,IAAI,KAAI,CAAC,OAAO,CAAC,IAAI,KAAK,MAAM,EAAE;aAEjC;iBAAK;gBACJ,QAAQ;gBACR,KAAI,CAAC,iBAAiB,EAAE,CAAC;aAE1B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,8CAAiB,GAAjB;QAAA,iBAgDC;QA/CC,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,CAAC,IAAI,CAAC,UAAC,IAAI;YAC9C,IAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBAClB,IAAM,KAAG,GAAG,EAAE,CAAC;gBACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACnC,KAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;iBACvB;gBACD,IAAM,GAAG,GAAG,KAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC;gBAE1C,QAAQ,CAAC;gBACV,KAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;gBAEzC,IAAI,UAAU,GAAG,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EACvC;oBACE,MAAM,EAAE,oBAAoB;oBAC5B,SAAS,EAAE,IAAI;iBAChB,EACD;oBACE,cAAc,EAAE,kBAAkB;oBAClC,WAAW,EAAE,sCAAsC;iBACpD,CAAC,CAAC;gBAEL,iDAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CACnB,+DAAQ,CAAC,cAAM,CAAC,CAAE,CACnB;qBACA,SAAS,CAAC,cAAI;oBACb,OAAO,CAAC,GAAG,CAAC,cAAc,EAAC,IAAI,CAAC,CAAC;oBACjC,IAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAChC,IAAG,CAAC,CAAC,OAAO,KAAK,CAAC,EAAE;wBAClB,mBAAmB;wBACnB,KAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,KAAG,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;wBACpD,CAAC,CAAC,CAAC;qBACJ;yBAAM;wBACL,mBAAmB;qBACpB;oBAEF,0BAA0B;gBAC3B,CAAC,EAAC,aAAG;oBACH,OAAO,CAAC,GAAG,CAAC,eAAe,EAAC,GAAG,CAAC,CAAC;oBACjC,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACpC,uBAAuB;oBACvB,OAAO,CAAC,GAAG,CAAC,cAAc,EAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;gBAChD,CAAC,CAAC,CAAC;gBAEH,QAAQ;aACT;QAEH,CAAC,CAAC,CAAC;IACL,CAAC;;gBAlQiB,sDAAM;gBACJ,wDAAQ;gBACP,8DAAe;gBAChB,+DAAQ;gBACb,uDAAQ;gBACP,+DAAU;gBACJ,2DAAI;gBACH,gEAAiB;gBACb,kFAAe;gBACnB,0EAAW;gBACf,kEAAO;gBACR,uDAAO;gBACL,wDAAQ;gBACN,2DAAW;;IAhFtB,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,2KAA0C;;SAE3C,CAAC;+EAoEkB,sDAAM;YACJ,wDAAQ;YACP,8DAAe;YAChB,+DAAQ;YACb,uDAAQ;YACP,+DAAU;YACJ,2DAAI;YACH,gEAAiB;YACb,kFAAe;YACnB,0EAAW;YACf,kEAAO;YACR,uDAAO;YACL,wDAAQ;YACN,2DAAW;OAhFtB,kBAAkB,CAsU9B;IAAD,yBAAC;CAAA;AAtU8B","file":"pages-menu-editclient-menu-editclient-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n   <ion-toolbar color=\\\"primary\\\">\\n     <ion-buttons slot=\\\"start\\\">\\n       <ion-icon padding  name=\\\"close\\\" (click)=\\\"close()\\\"></ion-icon>\\n     </ion-buttons>\\n     <ion-title>Details</ion-title>\\n     <ion-label padding slot=\\\"end\\\" (click)=\\\"save()\\\">Save</ion-label>\\n   </ion-toolbar>\\n </ion-header>\\n\\n<ion-content>\\n <!-- <ion-item lines=\\\"none\\\">\\n     <ion-label style=\\\"color:royalblue;\\\">\\n         <h2 text-capitalize >Billing Name</h2>\\n     </ion-label>\\n </ion-item> -->\\n   <!-- <ion-item>\\n       <ion-icon slot=\\\"start\\\" name=\\\"person\\\"></ion-icon>\\n       <ion-input placeholder=\\\"First Name\\\"  type=\\\"text\\\" style=\\\"border: none;text-align: left;\\\" [(ngModel)]=\\\"client.Fname\\\"></ion-input>\\n     </ion-item>\\n     <ion-item>\\n        <ion-icon slot=\\\"start\\\" name=\\\"person\\\"></ion-icon>\\n        <ion-input placeholder=\\\"Last Name\\\"  type=\\\"text\\\" style=\\\"border: none;text-align: left;\\\" [(ngModel)]=\\\"client.Lname\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-icon slot=\\\"start\\\" name=\\\"cart\\\"></ion-icon>\\n        <ion-input placeholder=\\\"Shop\\\"  type=\\\"text\\\" style=\\\"border: none;text-align: left;\\\" [(ngModel)]=\\\"client.Shop\\\"></ion-input>\\n      </ion-item>\\n     <ion-item>\\n         <ion-icon slot=\\\"start\\\" name=\\\"pin\\\"></ion-icon>\\n         <ion-input placeholder=\\\"Billing Address\\\" type=\\\"text\\\" style=\\\"border: none;text-align: left;\\\" [(ngModel)]=\\\"client.BillingAddress\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-icon slot=\\\"start\\\" name=\\\"business\\\"></ion-icon>\\n        <ion-input placeholder=\\\"City\\\" type=\\\"text\\\" style=\\\"border: none;text-align: left;\\\" [(ngModel)]=\\\"client.City\\\"></ion-input>\\n      \\n     </ion-item>\\n     <ion-item>\\n        <ion-icon slot=\\\"start\\\" name=\\\"call\\\"></ion-icon>\\n        <ion-input placeholder=\\\"Cell\\\" type=\\\"tel\\\" style=\\\"border: none;text-align: left;\\\" [(ngModel)]=\\\"client.Cell\\\"></ion-input>\\n      \\n     </ion-item> -->\\n     <form [formGroup]=\\\"loginform\\\">\\n         <ion-grid>\\n             <ion-row justify-content-center>\\n               <ion-col class=\\\"col-md-6\\\">\\n                   <ion-item>\\n                       <ion-icon slot=\\\"start\\\" name=\\\"person\\\"></ion-icon>\\n                       <ion-input type=\\\"text\\\" placeholder=\\\"First Name\\\"  formControlName=\\\"Fname\\\" [(ngModel)]=\\\"client.Fname\\\"></ion-input>\\n                   </ion-item>\\n                   <ng-container *ngFor=\\\"let error of errormessages.Fname\\\">\\n                     <div  style=\\\"color: red;\\\" *ngIf=\\\"loginform.get('Fname').hasError(error.type) && (loginform.get('Fname').dirty || loginform.get('Fname').touched)\\\">\\n                       *{{ error.message }}\\n                     </div>\\n                   </ng-container>\\n               </ion-col>\\n             </ion-row>\\n             <ion-row justify-content-center>\\n                  <ion-col class=\\\"col-md-6\\\">\\n                      <ion-item>\\n                          <ion-icon slot=\\\"start\\\" name=\\\"person\\\"></ion-icon>\\n                          <ion-input type=\\\"text\\\" placeholder=\\\"Last Name\\\"  formControlName=\\\"Lname\\\" [(ngModel)]=\\\"client.Lname\\\"></ion-input>\\n                      </ion-item>\\n                      <ng-container *ngFor=\\\"let error of errormessages.Lname\\\">\\n                        <div style=\\\"color: red;\\\" *ngIf=\\\"loginform.get('Lname').hasError(error.type) && (loginform.get('Lname').dirty || loginform.get('Lname').touched)\\\">\\n                          *{{ error.message }}\\n                        </div>\\n                      </ng-container>\\n                  </ion-col>\\n                </ion-row>\\n                <ion-row justify-content-center>\\n                     <ion-col class=\\\"col-md-6\\\">\\n                         <ion-item>\\n                              <ion-icon slot=\\\"start\\\" name=\\\"cart\\\"></ion-icon>\\n                             <ion-input type=\\\"text\\\" placeholder=\\\"Shop\\\" formControlName=\\\"Shop\\\" [(ngModel)]=\\\"client.Shop\\\"></ion-input>\\n                         </ion-item>\\n                         <ng-container *ngFor=\\\"let error of errormessages.Shop\\\">\\n                           <div style=\\\"color: red;\\\" *ngIf=\\\"loginform.get('Shop').hasError(error.type) && (loginform.get('Shop').dirty || loginform.get('Shop').touched)\\\">\\n                             *{{ error.message }}\\n                           </div>\\n                         </ng-container>\\n                     </ion-col>\\n                   </ion-row>\\n                   <ion-row justify-content-center>\\n                        <ion-col class=\\\"col-md-6\\\">\\n                            <ion-item>\\n                                 <ion-icon slot=\\\"start\\\" name=\\\"pin\\\"></ion-icon>\\n                                <ion-input type=\\\"text\\\" placeholder=\\\"Billing Address\\\" formControlName=\\\"BAddress\\\" [(ngModel)]=\\\"client.BillingAddress\\\"></ion-input>\\n                            </ion-item>\\n                            <ng-container *ngFor=\\\"let error of errormessages.BAddress\\\">\\n                              <div style=\\\"color: red;\\\" *ngIf=\\\"loginform.get('BAddress').hasError(error.type) && (loginform.get('BAddress').dirty || loginform.get('BAddress').touched)\\\">\\n                                *{{ error.message }}\\n                              </div>\\n                            </ng-container>\\n                        </ion-col>\\n                      </ion-row>\\n                      <ion-row justify-content-center>\\n                           <ion-col class=\\\"col-md-6\\\">\\n                               <ion-item>\\n                                    <ion-icon slot=\\\"start\\\" name=\\\"business\\\"></ion-icon>\\n                                   <ion-input type=\\\"text\\\" placeholder=\\\"City\\\" formControlName=\\\"City\\\" [(ngModel)]=\\\"client.City\\\"></ion-input>\\n                               </ion-item>\\n                               <ng-container *ngFor=\\\"let error of errormessages.City\\\">\\n                                 <div style=\\\"color: red;\\\" *ngIf=\\\"loginform.get('City').hasError(error.type) && (loginform.get('City').dirty || loginform.get('City').touched)\\\">\\n                                   *{{ error.message }}\\n                                 </div>\\n                               </ng-container>\\n                           </ion-col>\\n                         </ion-row>\\n                         <ion-row justify-content-center>\\n                              <ion-col class=\\\"col-md-6\\\">\\n                                  <ion-item>\\n                                       <ion-icon slot=\\\"start\\\" name=\\\"call\\\"></ion-icon>\\n                                      <ion-input type=\\\"tel\\\" placeholder=\\\"Cell\\\" formControlName=\\\"Cell\\\" [(ngModel)]=\\\"client.Cell\\\"></ion-input>\\n                                  </ion-item>\\n                                  <ng-container *ngFor=\\\"let error of errormessages.Cell\\\">\\n                                    <div style=\\\"color: red;\\\" *ngIf=\\\"loginform.get('Cell').hasError(error.type) && (loginform.get('Cell').dirty || loginform.get('Cell').touched)\\\">\\n                                      *{{ error.message }}\\n                                    </div>\\n                                  </ng-container>\\n                              </ion-col>\\n                            </ion-row>\\n              \\n           </ion-grid>\\n     </form>\\n   \\n      <!-- <ion-item>\\n         <ion-icon slot=\\\"start\\\"></ion-icon>\\n         <ion-input placeholder=\\\"Line 2\\\" type=\\\"text\\\" style=\\\"border: none;text-align: left;\\\" [(ngModel)]=\\\"client.add2\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n         <ion-icon slot=\\\"start\\\"></ion-icon>\\n         <ion-input placeholder=\\\"Line 3\\\" type=\\\"text\\\" style=\\\"border: none;text-align: left;\\\" [(ngModel)]=\\\"client.add3\\\"></ion-input>  \\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n         <ion-label style=\\\"color:royalblue;\\\">\\n             <h2 text-capitalize >Contact Details</h2>\\n         </ion-label>\\n     </ion-item>\\n     <ion-item>\\n         <ion-icon slot=\\\"start\\\" name=\\\"mail\\\"></ion-icon>\\n         <ion-input placeholder=\\\"Email\\\" type=\\\"text\\\" style=\\\"border: none;text-align: left;\\\" [(ngModel)]=\\\"client.add1\\\"></ion-input>\\n       \\n      </ion-item>\\n      <ion-item lines=\\\"none\\\" *ngIf=\\\"showmore == true\\\" (click)=\\\"showless()\\\">\\n        <ion-label text-center style=\\\"color:royalblue;\\\">show more</ion-label>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"showmore == false\\\">\\n         <ion-icon slot=\\\"start\\\" name=\\\"person\\\"></ion-icon>\\n         <ion-input placeholder=\\\"Contact Name\\\" type=\\\"text\\\" style=\\\"border: none;text-align: left;\\\" [(ngModel)]=\\\"client.contactName\\\"></ion-input>\\n       \\n      </ion-item>\\n      <ion-item *ngIf=\\\"showmore == false\\\">\\n         <ion-icon slot=\\\"start\\\" name=\\\"phone-portrait\\\"></ion-icon>\\n         <ion-input placeholder=\\\"Phone\\\" type=\\\"text\\\" style=\\\"border: none;text-align: left;\\\" [(ngModel)]=\\\"client.phone\\\"></ion-input>\\n       \\n      </ion-item>\\n      <ion-item *ngIf=\\\"showmore == false\\\">\\n         <ion-icon slot=\\\"start\\\" name=\\\"call\\\"></ion-icon>\\n         <ion-input placeholder=\\\"Cell\\\" type=\\\"text\\\" style=\\\"border: none;text-align: left;\\\" [(ngModel)]=\\\"client.cell\\\"></ion-input>\\n       \\n      </ion-item>\\n      <ion-item *ngIf=\\\"showmore == false\\\">\\n         <ion-icon slot=\\\"start\\\" name=\\\"print\\\"></ion-icon>\\n         <ion-input placeholder=\\\"Fax\\\" type=\\\"text\\\" style=\\\"border: none;text-align: left;\\\" [(ngModel)]=\\\"client.add1\\\"></ion-input>\\n       \\n      </ion-item>\\n      <ion-item *ngIf=\\\"showmore == false\\\">\\n         <ion-icon slot=\\\"start\\\" name=\\\"globe\\\"></ion-icon>\\n         <ion-input placeholder=\\\"Website\\\" type=\\\"text\\\" style=\\\"border: none;text-align: left;\\\" [(ngModel)]=\\\"client.add1\\\"></ion-input>\\n       \\n      </ion-item >\\n      <ion-item lines=\\\"none\\\" *ngIf=\\\"showmore == false\\\">\\n         <ion-label style=\\\"color:royalblue;\\\">\\n             <h2 text-capitalize >Shipping Address</h2>\\n         </ion-label>\\n     </ion-item>\\n     <ion-item *ngIf=\\\"showmore == false\\\">\\n         <ion-icon slot=\\\"start\\\" name=\\\"person\\\"></ion-icon>\\n         <ion-input placeholder=\\\"Shipping to\\\" type=\\\"text\\\" style=\\\"border: none;text-align: left;\\\" [(ngModel)]=\\\"client.add1\\\"></ion-input>\\n       \\n      </ion-item>\\n      <ion-item *ngIf=\\\"showmore == false\\\">\\n         <ion-icon slot=\\\"start\\\" name=\\\"pin\\\"></ion-icon>\\n         <ion-input placeholder=\\\"Line 1\\\" type=\\\"text\\\" style=\\\"border: none;text-align: left;\\\" [(ngModel)]=\\\"client.add1\\\"></ion-input>\\n       \\n      </ion-item>\\n      <ion-item *ngIf=\\\"showmore == false\\\">\\n         <ion-icon slot=\\\"start\\\"></ion-icon>\\n         <ion-input placeholder=\\\"Line 2\\\" type=\\\"text\\\" style=\\\"border: none;text-align: left;\\\" [(ngModel)]=\\\"client.add2\\\"></ion-input>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"showmore == false\\\">\\n         <ion-icon slot=\\\"start\\\"></ion-icon>\\n         <ion-input placeholder=\\\"Line 3\\\" type=\\\"text\\\" style=\\\"border: none;text-align: left;\\\" [(ngModel)]=\\\"client.add3\\\"></ion-input>  \\n      </ion-item>\\n      <ion-item lines=\\\"none\\\" *ngIf=\\\"showmore == false\\\">\\n         <ion-label style=\\\"color:royalblue;\\\">\\n             <h2 text-capitalize >Miscellaneous</h2>\\n         </ion-label>\\n     </ion-item>\\n     <ion-item (click)=\\\"openAlert()\\\" *ngIf=\\\"showmore == false\\\">\\n         <ion-icon slot=\\\"start\\\" name=\\\"calendar\\\"></ion-icon>\\n         <ion-label>{{client.days}} Days</ion-label>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\" *ngIf=\\\"showmore == false\\\">\\n         <ion-label style=\\\"color:royalblue;\\\">\\n             <h2 text-capitalize >Notes</h2>\\n         </ion-label>\\n     </ion-item>\\n     <ion-item *ngIf=\\\"showmore == false\\\">\\n         <ion-icon slot=\\\"start\\\" name=\\\"clipboard\\\"></ion-icon>\\n         <ion-input placeholder=\\\"Notes\\\" type=\\\"text\\\" style=\\\"border: none;text-align: left;\\\" [(ngModel)]=\\\"client.notes\\\"></ion-input>  \\n      </ion-item>\\n      <ion-item lines=\\\"none\\\" *ngIf=\\\"showmore == false\\\" (click)=\\\"showmor()\\\">\\n         <ion-label text-center style=\\\"color:royalblue;\\\">show less</ion-label>\\n       </ion-item> -->\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\nimport { Network } from '@ionic-native/network/ngx';\nimport { HTTP } from '@ionic-native/http/ngx'\nimport { Contacts, Contact, ContactField, ContactName } from '@ionic-native/contacts';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MenuEditclientPage } from './menu-editclient.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MenuEditclientPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  providers: [\n    DatePipe,\n    Network,\n    HTTP,\n    Contacts\n  ],\n  declarations: [MenuEditclientPage]\n})\nexport class MenuEditclientPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL21lbnUtZWRpdGNsaWVudC9tZW51LWVkaXRjbGllbnQucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { AlertController, Platform, LoadingController } from '@ionic/angular';\nimport { Contacts, Contact, ContactField, ContactName } from '@ionic-native/contacts';\nimport { HTTP } from '@ionic-native/http/ngx'\nimport { HttpClient } from '@angular/common/http';\nimport {  finalize } from 'rxjs/operators';\nimport { from } from 'rxjs';\nimport { DatabaseService} from 'src/app/services/database.service';\nimport { SyncService } from 'src/app/services/sync.service';\nimport { Network } from '@ionic-native/network/ngx';\nimport { Storage } from '@ionic/storage';\n\nimport { DatePipe } from '@angular/common';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\n\n\n\n@Component({\n  selector: 'app-menu-editclient',\n  templateUrl: './menu-editclient.page.html',\n  styleUrls: ['./menu-editclient.page.scss'],\n})\nexport class MenuEditclientPage implements OnInit {\n  id = '';\n  data = [];\n  username = '';\n  tblName:any=\"clients\";\n  tblId:any;\n  usdId:any;\n  acttype:any=\"edited\";\n  name:any;\n  lgdate:any=\"2019-11-21\";\n  client = {\n    Cid: '',\n    AccountId: '',\n    Fname: '',\n    Lname:'',\n    Shop: '',\n    BillingAddress: '',\n    City: '',\n    Cell: '',\n    Active: '',\n    Balance: 0,\n    Sync: 0\n  };\n  days = '30';\n  notes = '';\n  contactName = '';\n  cell = '';\n  phone = '';\n  loginform: FormGroup;\n  test = '';\n  errormessages = {\n    Fname : [\n      { type: 'requird', message: 'First Name is required'},\n      { type: 'pattern', message: 'Enter valid is required'}\n\n\n    ],\n    Shop : [\n      { type: 'requird', message: 'Email is required'},\n      { type: 'pattern', message: 'Enter valid is required'}\n\n    ],\n    BAddress : [\n      { type: 'requird', message: 'Email is required'},\n      { type: 'pattern', message: 'Enter valid is required'}\n\n    ],\n    City : [\n      { type: 'requird', message: 'Email is required'},\n      { type: 'pattern', message: 'Enter valid is required'}\n\n    ],\n    Cell : [\n      { type: 'requird', message: 'Email is required'},\n      { type: 'pattern', message: 'Enter valid phone number'},\n      { type: 'minlength', message: 'Enter valid phone number'},\n      { type: 'maxlength', message: 'Enter valid phone number'}\n\n\n    ],\n    Lname : [\n      { type: 'requird', message: 'Password is required'},\n      { type: 'minlength', message: 'Enter atleast 6 characters'}\n    ]\n  };\n\n  constructor(\n    private router: Router,\n    private location: Location,\n    private alertCtrl: AlertController,\n    private contacts: Contacts,\n    private plt: Platform,\n    private http: HttpClient,\n    private nativeHttp: HTTP,\n    private loadingCtrl: LoadingController,\n    private databaseservice: DatabaseService,\n    private syncService: SyncService,\n    private network: Network,\n    private storage:Storage,\n    private datePipe: DatePipe,\n    public formbuilder: FormBuilder,\n\n\n  ) {\n    if (this.router.getCurrentNavigation().extras.state) {\n      this.client = this.router.getCurrentNavigation().extras.state.editclient;\n      // this.id = this.router.getCurrentNavigation().extras.state.editclient.id;\n      // this.username = this.router.getCurrentNavigation().extras.state.editclient.username;\n      // this.phone = this.router.getCurrentNavigation().extras.state.editclient.billing.phone;\n      debugger;\n      this.storage.get('userId').then((val)=>{\n        this.usdId=val;\n        console.log(this.usdId);\n      });\n      this.getformattedDate();\n      this.loginform = this.formbuilder.group({\n\n        Fname: new FormControl('', Validators.compose([\n            Validators.required,\n        ])),\n        Lname: new FormControl('', Validators.compose([\n          Validators.required,\n          //Validators.minLength(6),\n        ])),\n        BAddress: new FormControl('', Validators.compose([\n          Validators.required,\n          //Validators.minLength(6),\n        ])),\n        City: new FormControl('', Validators.compose([\n          Validators.required,\n          //Validators.minLength(6),\n        ])),\n        Cell: new FormControl('', Validators.compose([\n          Validators.required,\n         // Validators.pattern('03[0-9]{2}-(?!1234567)(?!1111111)(?!7654321)[0-9]{7}'),\n          Validators.minLength(11),\n          Validators.maxLength(11)\n        ])),\n        Shop: new FormControl('', Validators.compose([\n          Validators.required,\n         // Validators.minLength(6),\n         // Validators.maxLength(30),\n          // Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n  \n        ]))\n  \n      });\n\n    }\n   }\n   getformattedDate()\n   {\n      var dateObj=new Date();\n\n      var year= dateObj.getFullYear().toString();\n      var month= dateObj.getMonth().toString();\n      var date= dateObj.getDate().toString();\n      var monthArray=['01','02','03','04','05','06','07','08','09','10','11','12'];\n      var hour=dateObj.getHours();\n      var min=dateObj.getMinutes();\n      var sec=dateObj.getSeconds();\n      this.lgdate=date+'/'+monthArray[month]+'/'+year+'  '+hour+':'+min+':'+sec;\n      console.log(this.lgdate);\n\n   }\n  ngOnInit() {\n  }\n  close() {\n\n    this.location.back();\n  }\n  save() {\n  \n    if((this.client.Fname.length>0 && this.client.Lname.length>0 && this.client.Shop.length>0 &&this.client.BillingAddress.length>0&&this.client.City.length>0&& this.client.Cell !== \"\" )) {\n     // this.getDataNativeHttp();\n    // this.updateClient();\n     if (this.loginform.valid === true) {\n      this.updateClient();\n     // this.getCid();\n    } else {\n      alert('Kindly enter correct information in fields');\n    }\n    } else {\n      this.alertCtrl.create({\n            header: 'Warning',\n            message: 'Kindly Fill All Fields',\n            buttons: [\n                      {\n                        text: 'OK',\n                        role: 'cancel',\n                        handler: () => {\n                          console.log('Cancel clicked');\n                        }\n                      }\n                    ]\n      }).then(alert => alert.present());\n    }\n  }\n  async getDataNativeHttp() {\n \n    // const z = this.client.billing.phone;\n    // const p = this.phone.toString();\n    // const a = +new Date();\n    // const b = this.client.first_name + a + '@gmail.com';\n    // const c = this.client.first_name + b;\n    debugger;\n     let loading = await this.loadingCtrl.create();\n     await loading.present();\n     const url = this.databaseservice.getURL();\n\n    this.nativeHttp.setDataSerializer(\"json\");\n    let nativeCall = this.nativeHttp.post(url + '/updateClient.php',\n      this.client\n     ,{\n       'Content-Type':'application/json',\n       'x-api-key': '28b32377-cd77-44b3-8cbb-a9dc69bfddf4'\n     });\n  \n    from(nativeCall).pipe(\n       finalize(() => loading.dismiss)\n     )\n     .subscribe(data => {\n       loading.dismiss();\n       console.log('Native data:',data);\n       this.data = JSON.parse(data.data);\n       console.log(this.data[0]);\n\n       this.databaseservice.setupdateclients(1);\n       this.router.navigate(['/menu/clients']);\n\n  \n      // this.initializeItems();\n     },err =>{\n       loading.dismiss();\n       console.log('JS call error',err);\n       const error = JSON.parse(err.error);\n       alert(error.message);\n       console.log('Native data:',JSON.parse(error));\n     });\n  \n  }\n  AddLog(){\n    if (this.usdId === 1) {\n      this.acttype = 'You  edited client';\n    } else {\n      this.acttype = 'You edited client';\n    }\n    this.name = this.client.Fname + ' ' + this.client.Lname;\n    let now = new Date().toString();\n    const a = this.datePipe.transform(now, 'dd MMM yyyy h:mm a');\n    this.lgdate = 'at ' + a;\n    this.tblName,this.tblId,this.usdId,this.acttype,this.lgdate\n    debugger\n    this.syncService.addLogs(this.tblName,this.tblId,this.usdId,this.acttype,this.name,this.lgdate).then(data => {\n      \n          console.log(\"Log has been added\");\n          this.syncService.syncAddedLog();\n          this.GetLogs();\n          \n    });\n  }\n  GetLogs(){\n    this.syncService.getAllLogs().then(data=>{\n      console.log(data);\n    });\n  }\n  updateClient() {\n    if (this.client.Sync === 1) {\n      this.client.Sync = 2;\n }\n    this.syncService.updateClient(\n      this.client.Fname, \n      this.client.Lname, \n      this.client.Shop, \n      this.client.BillingAddress, \n      this.client.City, \n      this.client.Cell, \n      this.client.Cid,\n      this.client.Balance,\n      this.client.Sync\n      )\n    .then(data => {\n      data\n      console.log(this.client.Cid);\n      this.tblId=this.client.Cid;\n      this.AddLog();\n      this.databaseservice.setupdateclients(1);\n      this.router.navigate(['/menu/clients']);\n      if (this.network.type === 'none') {\n       \n      }else {\n        debugger\n        this.syncUpdateClients();\n        \n      }\n    });\n  }\n  syncUpdateClients() {\n    this.syncService.syncUpdatedClients().then((data) => {\n      if(data.length > 0) {\n        const IDs = [];\n        for (let i = 0; i < data.length; i++) {\n           IDs[i] = data[i].Cid;\n        }\n        const url = this.databaseservice.getURL();\n      \n        debugger;\n       this.nativeHttp.setDataSerializer(\"json\");\n       \n        let nativeCall = this.nativeHttp.post(url , \n          {\n            'Name': 'syncUpdatedClients',\n            \"Clients\": data\n          } , \n          {\n            'Content-Type': 'application/json',\n            'x-api-key': '28b32377-cd77-44b3-8cbb-a9dc69bfddf4'\n          });\n     \n        from(nativeCall).pipe(\n          finalize(() =>{} )\n        )\n        .subscribe(data => {\n          console.log('Native data:',data);\n          const g = JSON.parse(data.data);\n          if(g.success === 1) {\n            //alert('success');\n            this.syncService.updateSyncedClients(IDs).then((data) => {\n            });\n          } else {\n            // alert('failed');\n          }\n\n         // this.initializeItems();\n        },err =>{\n          console.log('JS call error',err);\n          const error = JSON.parse(err.error);\n          //alert(error.message);\n          console.log('Native data:',JSON.parse(error));\n        });\n\n        debugger\n      }\n    \n    });\n  }\n}\n"],"sourceRoot":""}