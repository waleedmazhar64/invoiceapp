{"version":3,"sources":["./src/app/pages/credit-memos/credit-memos.page.html","./src/app/pages/credit-memos/credit-memos.module.ts","./src/app/pages/credit-memos/credit-memos.page.scss","./src/app/pages/credit-memos/credit-memos.page.ts"],"names":[],"mappings":"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","file":"credit-memos-credit-memos-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n    <ion-toolbar color=\\\"primary\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button *ngIf=\\\"s == 0\\\"></ion-menu-button>\\n        <ion-icon padding  *ngIf=\\\"s == 1\\\" (click)=\\\"back()\\\" name=\\\"arrow-back\\\"></ion-icon>\\n      </ion-buttons>\\n      <ion-title *ngIf=\\\"s == 0\\\">Credit Memos</ion-title>\\n      <ion-icon slot=\\\"end\\\" name=\\\"search\\\" padding (click)=\\\"s=1\\\"></ion-icon>\\n      <ion-input padding placeholder=\\\"Search Invoices\\\" *ngIf=\\\"s == 1\\\"></ion-input>\\n    </ion-toolbar>\\n    <!-- <ion-toolbar color=\\\"primary\\\" *ngIf=\\\"s == 1\\\">\\n      <ion-row no-padding>\\n        <ion-label>Suggested Searchs</ion-label>\\n      </ion-row>\\n    </ion-toolbar> -->\\n    <ion-toolbar *ngIf=\\\"s == 1\\\" color=\\\"primary\\\">\\n      <ion-grid >\\n        \\n        <ion-row>\\n            <ion-col text-center>\\n                <ion-button (click)=\\\"paid()\\\" [color]=\\\"paidcolor\\\">Issued</ion-button>\\n              </ion-col>\\n              <ion-col text-center >\\n                  <ion-button (click)=\\\"unpaid()\\\" [color]=\\\"unpaidcolor\\\">Approved</ion-button>\\n              </ion-col>\\n        </ion-row> \\n        \\n      </ion-grid>\\n    </ion-toolbar>\\n    <ion-toolbar *ngIf=\\\"s == 1\\\" color=\\\"primary\\\">\\n        <ion-grid >\\n          \\n          <ion-row>\\n              <ion-col text-center>\\n                  <ion-button (click)=\\\"pending()\\\" [color]=\\\"pend\\\">Pending</ion-button>\\n                </ion-col>\\n                <ion-col text-center >\\n                    <ion-button (click)=\\\"withdrawn()\\\" [color]=\\\"with\\\">Withdrawn</ion-button>\\n                </ion-col>\\n          </ion-row> \\n          \\n        </ion-grid>\\n      </ion-toolbar>\\n   \\n  </ion-header>\\n\\n<ion-content padding>\\n    <!-- <ion-item no-padding lines=\\\"full\\\"></ion-item> -->\\n    <p style=\\\"text-align:left;\\\">\\n        <span *ngIf=\\\"editSelected == false\\\">1 invoice</span>\\n        <span *ngIf=\\\"editSelected == true\\\">Selected {{ selectedCount }}</span>\\n          \\n          <span (click)=\\\"editSelected = true\\\" *ngIf=\\\"editSelected == false\\\" style=\\\"float:right;\\\" >\\n              Edit\\n          </span>\\n          <span (click)=\\\"editSelected = false\\\" *ngIf=\\\"editSelected == true\\\" style=\\\"float:right;\\\" >\\n            Done\\n        </span>\\n      </p>\\n         <!-- fab placed to the bottom end -->\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\" (click)=\\\"addIcon()\\\">\\n      <ion-fab-button>\\n        <ion-icon name=\\\"add\\\"></ion-icon>\\n      </ion-fab-button>\\n    </ion-fab>\\n    <ion-refresher (ionRefresh)=\\\"doRefresh($event)\\\" slot=\\\"fixed\\\"> \\n        <ion-refresher-content></ion-refresher-content>\\n      </ion-refresher>\\n    <ion-list *ngIf=\\\"editSelected == false\\\">\\n                \\n            <ion-item-sliding  *ngFor=\\\"let item of items\\\">\\n                <ion-item-options side=\\\"start\\\">\\n                  <ion-item-option (click)=\\\"edit(item)\\\">Edit</ion-item-option>\\n                  <ion-item-option color=\\\"danger\\\" (click)=\\\"delete(item)\\\">Delete</ion-item-option>\\n      \\n                </ion-item-options>\\n                <ion-item (click)=\\\"itemClicked(item)\\\">\\n      \\n                  \\n                    <ion-avatar slot=\\\"start\\\" >\\n                        <img src=\\\"assets/plus.png\\\">\\n                    </ion-avatar>\\n                    <ion-label>\\n                      <h2 text-capitalize>{{ item.name }} {{ item.duedate }}</h2>\\n                      <p>{{ item.date }}</p>\\n                    </ion-label>\\n                    <ion-label>\\n                        <span (click)=\\\"edit()\\\" style=\\\"float:right;\\\">\\n                            $ {{ item.total }}\\n                        </span>\\n                    </ion-label>\\n                 </ion-item>          \\n              </ion-item-sliding>\\n              <ion-icon slot=\\\"end\\\" name=\\\"add-circle\\\"></ion-icon>\\n\\n              </ion-list>\\n              <ion-list *ngIf=\\\"editSelected == true\\\">\\n                \\n                <ion-item-sliding  *ngFor=\\\"let item of items\\\">\\n                    <!-- <ion-item-options side=\\\"start\\\">\\n                      <ion-item-option (click)=\\\"edit(item)\\\">Edit</ion-item-option>\\n                      <ion-item-option color=\\\"danger\\\" (click)=\\\"delete(item)\\\">Delete</ion-item-option>\\n          \\n                    </ion-item-options>-->\\n                    <ion-item *ngIf=\\\"item.selected == true\\\"  (click)=\\\"item.selected = false\\\" (click)=\\\"update()\\\">\\n          \\n                      \\n                        <ion-avatar slot=\\\"start\\\" >\\n                            <img *ngIf=\\\"item.selected == false\\\" src=\\\"assets/out.png\\\">\\n                            <img *ngIf=\\\"item.selected == true\\\" src=\\\"assets/fill.png\\\">\\n                        </ion-avatar>\\n                        <ion-label>\\n                          <h2 text-capitalize>{{ item.name }} {{ item.duedate }}</h2>\\n                          <p>{{ item.date }}</p>\\n                        </ion-label>\\n                        <ion-label>\\n                            <span (click)=\\\"edit()\\\" style=\\\"float:right;\\\">\\n                                $ {{ item.total }}\\n                            </span>\\n                        </ion-label>\\n                     </ion-item>  \\n                     <ion-item *ngIf=\\\"item.selected == false\\\"  (click)=\\\"item.selected = true\\\" (click)=\\\"update()\\\">\\n          \\n                      \\n                      <ion-avatar slot=\\\"start\\\" >\\n                          <img *ngIf=\\\"item.selected == false\\\" src=\\\"assets/out.png\\\">\\n                          <img *ngIf=\\\"item.selected == true\\\" src=\\\"assets/fill.png\\\">\\n                      </ion-avatar>\\n                      <ion-label>\\n                        <h2 text-capitalize>{{ item.name }} {{ item.duedate }}</h2>\\n                        <p>{{ item.date }}</p>\\n                      </ion-label>\\n                      <ion-label>\\n                          <span (click)=\\\"edit()\\\" style=\\\"float:right;\\\">\\n                              $ {{ item.total }}\\n                          </span>\\n                      </ion-label>\\n                   </ion-item>                  \\n                  </ion-item-sliding>\\n                  <ion-icon slot=\\\"end\\\" name=\\\"add-circle\\\"></ion-icon>\\n    \\n                  </ion-list>\\n<!--     \\n  <ion-infinite-scroll threshold=\\\"5%\\\" (ionInfinite)=\\\"doInfinite($event)\\\">\\n      <ion-infinite-scroll-content loadingSpinner=\\\"crescent\\\" loadingText=\\\"loading more...\\\"></ion-infinite-scroll-content>\\n    </ion-infinite-scroll> -->\\n</ion-content>\\n\\n<ion-footer *ngIf=\\\"editSelected == true\\\">\\n \\n    <div style=\\\"text-align: center;\\\">\\n      <ion-toolbar color=\\\"light\\\">\\n          <ion-grid text-center>\\n              <ion-row text-center>\\n                  <ion-button color=\\\"danger\\\" text-capitalize=\\\"false\\\" fill=\\\"outline\\\" size=\\\"small\\\"  style=\\\"width: 80%; margin-left: auto;margin-right: auto;--border-radius: 15px;\\\">Delete</ion-button>\\n\\n              </ion-row>\\n              \\n              <ion-row text-center>\\n                  <ion-buttons slot=\\\"end\\\">\\n                      <ion-button>\\n                        <ion-icon slot=\\\"end\\\" name=\\\"arrow-round-forward\\\"></ion-icon>\\n                        forward\\n                      </ion-button>\\n                    </ion-buttons>\\n              </ion-row>\\n              <ion-row>\\n              </ion-row>\\n              </ion-grid>\\n\\n      </ion-toolbar>\\n    </div>\\n\\n\\n</ion-footer>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CreditMemosPage } from './credit-memos.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CreditMemosPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [CreditMemosPage]\n})\nexport class CreditMemosPageModule {}\n","module.exports = \"ion-icon {\\n  width: 30px;\\n  height: 30px;\\n  color: #ffffff;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvY3JlZGl0LW1lbW9zL0M6XFx3YW1wNjRcXHd3d1xcaW52b2ljZS5way9zcmNcXGFwcFxccGFnZXNcXGNyZWRpdC1tZW1vc1xcY3JlZGl0LW1lbW9zLnBhZ2Uuc2NzcyIsInNyYy9hcHAvcGFnZXMvY3JlZGl0LW1lbW9zL2NyZWRpdC1tZW1vcy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBT0U7RUFDRSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGNBQUE7QUNOSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NyZWRpdC1tZW1vcy9jcmVkaXQtbWVtb3MucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaW9uLWhlYWRlciB7XHJcbi8vICAgICBoZWlnaHQ6IDQzcHg7Ly9ieSBkZWZhdWx0IDU2cHhcclxuLy8gICB9XHJcbi8vICAgaW9uLXRvb2xiYXIge1xyXG4vLyAgICAgaGVpZ2h0OiA2NHB4O1xyXG4vLyAgICAgLS1iYWNrZ3JvdW5kOiAjNTI1MmQxO1xyXG4vLyAgIH1cclxuICBpb24taWNvbiB7XHJcbiAgICB3aWR0aDogMzBweDsgLy9QcmVmZXJyZWQgc2l6ZSBoZXJlXHJcbiAgICBoZWlnaHQ6IDMwcHg7XHJcbiAgICBjb2xvcjojZmZmZmZmO1xyXG4gIH0iLCJpb24taWNvbiB7XG4gIHdpZHRoOiAzMHB4O1xuICBoZWlnaHQ6IDMwcHg7XG4gIGNvbG9yOiAjZmZmZmZmO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationExtras } from '@angular/router';\n\nimport { IonContent } from '@ionic/angular';\n\n@Component({\n  selector: 'app-credit-memos',\n  templateUrl: './credit-memos.page.html',\n  styleUrls: ['./credit-memos.page.scss'],\n})\nexport class CreditMemosPage implements OnInit {\n\n  paidcolor = 'primary';\n  unpaidcolor = 'primary';\n  pend = 'primary';\n  with = 'primary';\n  items = [\n    {\n       name: 'saad',\n       date: '10/09/2019',\n       duedate: '24',\n       total: '108',\n       selected: false\n    },\n    {\n      name: 'saad',\n      date: '10/09/2019',\n      duedate: '24',\n      total: '109',\n      selected: false\n    }\n\n  ];\n  editSelected = false; \n  itemSelected = false;\n  selectedCount = this.items.filter(x => x.selected === true).length;\n  s = 0;\n  constructor(\n    private router: Router,\n  ) { }\n\n  ngOnInit() {\n  }\n  addIcon() {\n    this.router.navigate(['addcreditmemos']);\n  }\n  edittxt() {\n    alert('edit');\n  }\n  doRefresh(refresher) {\n  //   this.data.subscribe(data => {\n  //     this.items = data.results;\n  //     refresher.target.complete();\n  //  });\n  this.items = this.items;\n  }\n  itemClicked(item) {\n    const navigationExtras: NavigationExtras = {\n       state: {\n         user: item\n       }\n     };\n     this.router.navigate(['invoicedetails'], navigationExtras);\n  }\n  edit(item) {\n\n    alert('edit:' + item.total);\n  }\n  delete(item) {\n    alert('del:' + item.total);\n  }\n  update() {\n    //debugger;\n    this.selectedCount = this.items.filter(x => x.selected === true).length;\n  }\n  paid() {\n\n    this.paidcolor = 'success';\n    this.unpaidcolor = 'primary';\n    this.with = 'primary';\n    this.pend = 'primary';\n  }\n  unpaid() {\n    this.unpaidcolor = 'success';\n    this.paidcolor = 'primary';\n    this.with = 'primary';\n    this.pend = 'primary';\n  }\n  back() {\n    this.s = 0;\n    this.paidcolor = 'primary';\n    this.unpaidcolor = 'primary';\n    this.with = 'primary';\n    this.pend = 'primary';\n\n  }\n  pending() {\n    this.paidcolor = 'primary';\n    this.unpaidcolor = 'primary';\n    this.with = 'primary';\n    this.pend = 'success';\n  }\n  withdrawn() {\n    this.paidcolor = 'primary';\n    this.unpaidcolor = 'primary';\n    this.with = 'success';\n    this.pend = 'primary';\n   // this.content.();\n\n    \n  }\n\n}\n"],"sourceRoot":""}